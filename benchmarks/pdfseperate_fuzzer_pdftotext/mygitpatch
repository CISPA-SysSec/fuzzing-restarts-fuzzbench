diff --git a/CMakeLists.txt b/CMakeLists.txt
index e359288b..5e0b4eba 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -70,6 +70,7 @@ else()
   set(ENABLE_RELOCATABLE OFF)
 endif()
 option(EXTRA_WARN "Enable extra compile warnings" OFF)
+option(ENABLE_MFUZZER "libfuzzer_target for fuzzbench." ON)
 
 set(CMAKE_INSTALL_RPATH_USE_LINK_PATH TRUE)
 
@@ -708,6 +709,10 @@ endif()
 if(ENABLE_UTILS)
   add_subdirectory(utils)
 endif()
+if(ENABLE_MFUZZER)
+  add_subdirectory(fuzzer)
+  add_subdirectory(fuzzer_lib)
+endif()
 if(ENABLE_GLIB)
   add_subdirectory(glib)
 endif()
@@ -774,6 +779,7 @@ show_end_message_yesno("use lcms2" USE_CMS)
 show_end_message_yesno("use boost" Boost_FOUND)
 show_end_message_yesno("command line utils" ENABLE_UTILS)
 show_end_message_yesno("fuzz target" ENABLE_FUZZER)
+show_end_message_yesno("fuzz target of pdftotext used by libfuzzer" ENABLE_MFUZZER)
 show_end_message("test data dir" ${TESTDATADIR})
 
 if(NOT ENABLE_SPLASH AND NOT CAIRO_FOUND)
diff --git a/cmake/modules/PopplerMacros.cmake b/cmake/modules/PopplerMacros.cmake
index a9d20948..af44ebf9 100644
--- a/cmake/modules/PopplerMacros.cmake
+++ b/cmake/modules/PopplerMacros.cmake
@@ -123,7 +123,8 @@ if(CMAKE_COMPILER_IS_GNUCXX)
   set(DEFAULT_COMPILE_WARNINGS_EXTRA "${_warn} ${_warnx}")
 
   set(_save_cxxflags "${CMAKE_CXX_FLAGS}")
-  set(CMAKE_CXX_FLAGS                "-fno-exceptions -fno-check-new -fno-common -D_DEFAULT_SOURCE")
+  #"-fno-exceptions -fno-check-new -fno-common -D_DEFAULT_SOURCE"
+  set(CMAKE_CXX_FLAGS                "-D_DEFAULT_SOURCE")
   set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g ${_save_cxxflags}")
   set(CMAKE_CXX_FLAGS_RELEASE        "-O2 -DNDEBUG ${_save_cxxflags}")
   set(CMAKE_CXX_FLAGS_DEBUG          "-g -O2 -fno-reorder-blocks -fno-schedule-insns -fno-inline ${_save_cxxflags}")
@@ -167,7 +168,8 @@ if ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang")
   set(DEFAULT_COMPILE_WARNINGS_EXTRA "${_warn} ${_warnx}")
 
   set(_save_cxxflags "${CMAKE_CXX_FLAGS}")
-  set(CMAKE_CXX_FLAGS                "-fno-exceptions -fno-check-new -fno-common -D_DEFAULT_SOURCE")
+  #-fno-exceptions -fno-check-new -fno-common -D_DEFAULT_SOURCE
+  set(CMAKE_CXX_FLAGS                "-D_DEFAULT_SOURCE")
   set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g ${_save_cxxflags}")
   set(CMAKE_CXX_FLAGS_RELEASE        "-O2 -DNDEBUG ${_save_cxxflags}")
   # clang does not support -fno-reorder-blocks -fno-schedule-insns, so do not use -O2
